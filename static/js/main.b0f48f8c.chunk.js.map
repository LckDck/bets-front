{"version":3,"sources":["logo.svg","list.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","list","id","label","value","fields","App","useState","bets","setBets","fieldsWithError","setFieldsWithError","checkDuplicates","errors","keys","Object","forEach","key","otherKey","push","length","os","require","useEffect","map","field","style","margin","backgroundColor","indexOf","borderRadius","flexDirection","flex","alignItems","justifyContent","className","options","placeholder","onChange","item","index","newBets","tryAddValue","isSearchable","type","disabled","onClick","moreErrors","checkEmpty","copy","str","EOL","generateString","format","config","navigator","URL","process","window","location","href","origin","addEventListener","swUrl","isLocalhost","fetch","headers","then","response","contentType","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","register","Boolean","hostname","match","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0f48f8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const list =\n    [\n        {\n            id: 0,\n            label: 'Lewis Hamilton',\n            value: 'Hamilton'\n        },\n        {\n            id: 1,\n            label: 'Valtteri Bottas',\n            value: 'Bottas'\n        },\n        {\n            id: 2,\n            label: 'Sergio Perez',\n            value: 'Perez'\n        },\n        {\n            id: 3,\n            label: 'Max Verstappen',\n            value: 'Verstappen'\n        },\n        {\n            id: 4,\n            label: 'Daniel Ricciardo',\n            value: 'Ricciardo'\n        },\n        {\n            id: 5,\n            label: 'Lando Norris',\n            value: 'Norris'\n        },\n        {\n            id: 6,\n            label: 'Sebastian Vettel',\n            value: 'Vettel'\n        },\n        {\n            id: 7,\n            label: 'Lance Stroll',\n            value: 'Stroll'\n        },\n        {\n            id: 8,\n            label: 'Fernando Alonso',\n            value: 'Alonso'\n        },\n        {\n            id: 9,\n            label: 'Esteban Ocon',\n            value: 'Ocon'\n        },\n        {\n            id: 10,\n            label: 'Charles Leclerc',\n            value: 'Leclerc'\n        },\n        {\n            id: 11,\n            label: 'Carlos Sainz',\n            value: 'Sainz'\n        },\n        {\n            id: 12,\n            label: 'Pierre Gasly',\n            value: 'Gasly'\n        },\n        {\n            id: 13,\n            label: 'Yuki Tsunodal',\n            value: 'Tsunoda'\n        },\n        {\n            id: 14,\n            label: 'Kimi Raikkonen',\n            value: 'Raikkonen'\n        },\n        {\n            id: 15,\n            label: 'Antonio Giovinazzi',\n            value: 'Giovinazzi'\n        },\n        {\n            id: 16,\n            label: 'Nikita Mazepin',\n            value: 'Mazepin'\n        },\n        {\n            id: 17,\n            label: 'Mick Schumacher',\n            value: 'Schumacher'\n        },\n        {\n            id: 18,\n            label: 'George Russell',\n            value: 'Russell'\n        },\n        {\n            id: 19,\n            label: 'Nicholas Latifi',\n            value: 'Latifi'\n        }\n    ];","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { list } from './list';\nimport copy from 'copy-to-clipboard';\n\nimport Select from 'react-select';\n\nconst fields = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"BL\", \"Q\"];\n\nconst App = () => {\n  const [bets, setBets] = useState({});\n  const [fieldsWithError, setFieldsWithError] = useState([]);\n\n  const tryAddValue = (value, field) => {\n    let newBets = { ...bets }\n    newBets[field] = value;\n    setBets(newBets);\n    checkDuplicates(newBets);\n  }\n\n  const checkDuplicates = (list) => {\n    const errors = [];\n    const keys = Object.keys(list);\n\n    keys.forEach(key => {\n      keys.forEach(otherKey => {\n        if (key != otherKey\n          && key != 'Q'\n          && otherKey != 'Q'\n          && key != 'BL'\n          && otherKey != 'BL'\n          && list[key] !== ''\n          && list[key] == list[otherKey]\n        ) {\n          errors.push(key);\n        }\n      });\n    });\n    setFieldsWithError(errors)\n    return errors.length > 0\n  }\n\n  var os = require('os')\n\n  const generateString = () => {\n    var str = '';\n    fields.forEach(key => {\n      if (str != '') {\n        str += os.EOL;\n      }\n      str += ((key == 'Q' || key == 'BL') ? `${ key }-${ list[bets[key]].value }` : list[bets[key]].value);\n    });\n    return str;\n  }\n\n  const checkEmpty = () => {\n    const moreErrors = [...fieldsWithError]\n    fields.forEach(key => {\n      if (typeof bets[key] === 'undefined') {\n        moreErrors.push(key)\n      }\n    });\n    setFieldsWithError(moreErrors);\n    return moreErrors.length > 0\n  }\n\n  useEffect(() => {\n\n  }, [bets])\n\n  const btnClick = () => {\n    if (checkDuplicates(bets)){\n      return;\n    }\n    if (checkEmpty(bets)) {\n      return;\n    }\n    copy(generateString(), {format: 'text/plain'});\n  }\n\n  return (\n    <div>\n\n      {fields.map(field =>\n        <div>\n          <div style={{\n            margin: 10,\n            backgroundColor: fieldsWithError.indexOf(field) > -1 ? '#ff000055' : 'transparent',\n            borderRadius: 10,\n            flexDirection: 'row', flex: 1, alignItems: 'flex-start', justifyContent: 'center'\n          }}>\n            <label className='label'>{field}</label>\n            <Select\n              options={list}\n              placeholder={'Выберите гонщика'}\n              onChange={(item, index) => tryAddValue(item.id, field)}\n              className='picker'\n              value={list[bets[field]]}\n              isSearchable={false}\n            />\n          </div>\n        </div>\n      )}\n      <div className='button-container'>\n        <button className='button' type=\"submit\" disabled={fieldsWithError.length > 0} onClick={btnClick}>Копировать</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nregister()\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}